{"mappings":"kiBAMA,IAAMA,EAAaC,SAASC,cAAc,oBACpCC,EAAWF,SAASC,cAAc,kBAmDxCF,EAAWI,iBAAiB,SAhDD,WACvB,IAG2BC,EAAMC,EACzBC,EACAC,EALFC,EAAYR,SAASC,cAAc,qBAAqBQ,QAAQC,MAChEC,EAAST,EAASO,QAAQG,GAELR,EAkBTO,EAlBeN,EAkBP,eAjBlBC,EAAQO,KAAKC,MAAMC,aAAaC,QAAQX,KAAS,GACjDE,EAAaM,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,GAE/DV,EAAMW,SAASb,GACfc,EAAAC,OAAOC,QAAQ,GAAaC,OAAVb,EAAU,yBAG5BD,EAAWU,SAASb,GACpBc,EAAAC,OAAOC,QAAQ,GAAaC,OAAVb,EAAU,kCAIhCU,EAAAC,OAAOG,QAAQ,GAAaD,OAAVb,EAAU,+BAC5BF,EAAMiB,KAAKnB,GACXW,aAAaS,QAAQnB,EAAKQ,KAAKY,UAAUnB,I,IA8BjDJ,EAASC,iBAAiB,SAxBG,WACrB,IAG2BC,EAAMC,EACzBC,EAJFE,EAAYR,SAASC,cAAc,qBAAqBQ,QAAQC,MAChEC,EAAST,EAASO,QAAQG,GAELR,EAgBTO,EAhBeN,EAgBP,aAflBC,EAAQO,KAAKC,MAAMC,aAAaC,QAAQX,KAAS,IAClCQ,KAAKC,MAAMC,aAAaC,QAAQ,kBAAoB,IACtDC,SAASb,GACtBc,EAAAC,OAAOC,QAAQ,GAAaC,OAAVb,EAAU,yBAG5BF,EAAMW,SAASb,GACfc,EAAAC,OAAOC,QAAQ,GAAaC,OAAVb,EAAU,kCAGhCU,EAAAC,OAAOG,QAAQ,GAAaD,OAAVb,EAAU,6BAC5BF,EAAMiB,KAAKnB,GACXW,aAAaS,QAAQnB,EAAKQ,KAAKY,UAAUnB,I","sources":["src/scripts/watched-queue.mjs"],"sourcesContent":["import axios from \"axios\";\nimport { Notify } from \"notiflix\";\nimport { apiKey } from \"./make_single_tile.mjs\";\nimport { getFilmDetails } from \"./modal.mjs\";\nimport { makeSingleFilmTile } from \"./make_single_tile.mjs\";\n\nconst addWatched = document.querySelector(\".add-watched-btn\");\nconst addQueue = document.querySelector(\".add-queue-btn\");\n\n\nconst handleAddToWatched = () => {\n    const filmTitle = document.querySelector(\".modal-film-title\").dataset.title;\n    const filmId = addQueue.dataset.id;\n\n    const addToLocalStorage = (film, key) => {\n        let films = JSON.parse(localStorage.getItem(key)) || [];\n        let queueFilms = JSON.parse(localStorage.getItem('queueFilms')) || [];\n\n        if (films.includes(film)) {\n            Notify.failure(`${filmTitle} is already watched!`);\n            return false;\n        } \n        if (queueFilms.includes(film)) {\n            Notify.failure(`${filmTitle} is already in on the queue!`);\n            return false;\n        }\n        else {\n        Notify.success(`${filmTitle} is added to watched list!`);\n        films.push(film);\n        localStorage.setItem(key, JSON.stringify(films));\n        }\n    };\n    addToLocalStorage(filmId, 'watchedFilms')\n    };\n\n    const handleAddToQueue = () => {\n        const filmTitle = document.querySelector(\".modal-film-title\").dataset.title;\n        const filmId = addQueue.dataset.id;\n\n        const addToLocalStorage = (film, key) => {\n            let films = JSON.parse(localStorage.getItem(key)) || [];\n            let watchedFilms = JSON.parse(localStorage.getItem('watchedFilms')) || [];\n            if (watchedFilms.includes(film)) {\n                Notify.failure(`${filmTitle} is already watched!`);\n                return false;\n            }\n            if (films.includes(film)) {\n                Notify.failure(`${filmTitle} is already in on the queue!`);\n                return false;\n            } else {\n            Notify.success(`${filmTitle} is added to queue list!`);\n            films.push(film);\n            localStorage.setItem(key, JSON.stringify(films));\n            }\n        };\n        addToLocalStorage(filmId, 'queueFilms');\n    };\n\naddWatched.addEventListener(\"click\", handleAddToWatched);\naddQueue.addEventListener(\"click\", handleAddToQueue);\n\n"],"names":["$79a21c93d1864260$var$addWatched","document","querySelector","$79a21c93d1864260$var$addQueue","addEventListener","film","key","films","queueFilms","filmTitle","dataset","title","filmId","id","JSON","parse","localStorage","getItem","includes","$ejkSG","Notify","failure","concat","success","push","setItem","stringify"],"version":3,"file":"index.d28fc029.js.map"}