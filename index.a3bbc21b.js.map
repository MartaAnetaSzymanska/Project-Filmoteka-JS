{"mappings":"shBAMA,MAAMA,EAAaC,SAASC,cAAc,oBACpCC,EAAWF,SAASC,cAAc,kBAmDxCF,EAAWI,iBAAiB,SAhDD,KACvB,MAAMC,EAAYJ,SAASC,cAAc,qBAAqBI,QAAQC,MAG5C,EAACC,EAAMC,KAC7B,IAAIC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQL,KAAS,GACjDM,EAAaJ,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,GAE/DJ,EAAMM,SAASR,GACfS,EAAAC,OAAOC,QAAQ,GAAGd,yBAGlBU,EAAWC,SAASR,GACpBS,EAAAC,OAAOC,QAAQ,GAAGd,kCAItBY,EAAAC,OAAOE,QAAQ,GAAGf,+BAClBK,EAAMW,KAAKb,GACXK,aAAaS,QAAQb,EAAKE,KAAKY,UAAUb,I,EAG7Cc,CApBerB,EAASG,QAAQmB,GAoBN,eAAe,IA2B7CtB,EAASC,iBAAiB,SAxBG,KACrB,MAAMC,EAAYJ,SAASC,cAAc,qBAAqBI,QAAQC,MAG5C,EAACC,EAAMC,KAC7B,IAAIC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQL,KAAS,IAClCE,KAAKC,MAAMC,aAAaC,QAAQ,kBAAoB,IACtDE,SAASR,GACtBS,EAAAC,OAAOC,QAAQ,GAAGd,yBAGlBK,EAAMM,SAASR,GACfS,EAAAC,OAAOC,QAAQ,GAAGd,kCAGtBY,EAAAC,OAAOE,QAAQ,GAAGf,6BAClBK,EAAMW,KAAKb,GACXK,aAAaS,QAAQb,EAAKE,KAAKY,UAAUb,I,EAG7Cc,CAlBerB,EAASG,QAAQmB,GAkBN,aAAa","sources":["src/scripts/watched-queue.mjs"],"sourcesContent":["import axios from \"axios\";\nimport { Notify } from \"notiflix\";\nimport { apiKey } from \"./make_single_tile.mjs\";\nimport { getFilmDetails } from \"./modal.mjs\";\nimport { makeSingleFilmTile } from \"./make_single_tile.mjs\";\n\nconst addWatched = document.querySelector(\".add-watched-btn\");\nconst addQueue = document.querySelector(\".add-queue-btn\");\n\n\nconst handleAddToWatched = () => {\n    const filmTitle = document.querySelector(\".modal-film-title\").dataset.title;\n    const filmId = addQueue.dataset.id;\n\n    const addToLocalStorage = (film, key) => {\n        let films = JSON.parse(localStorage.getItem(key)) || [];\n        let queueFilms = JSON.parse(localStorage.getItem('queueFilms')) || [];\n\n        if (films.includes(film)) {\n            Notify.failure(`${filmTitle} is already watched!`);\n            return false;\n        } \n        if (queueFilms.includes(film)) {\n            Notify.failure(`${filmTitle} is already in on the queue!`);\n            return false;\n        }\n        else {\n        Notify.success(`${filmTitle} is added to watched list!`);\n        films.push(film);\n        localStorage.setItem(key, JSON.stringify(films));\n        }\n    };\n    addToLocalStorage(filmId, 'watchedFilms')\n    };\n\n    const handleAddToQueue = () => {\n        const filmTitle = document.querySelector(\".modal-film-title\").dataset.title;\n        const filmId = addQueue.dataset.id;\n\n        const addToLocalStorage = (film, key) => {\n            let films = JSON.parse(localStorage.getItem(key)) || [];\n            let watchedFilms = JSON.parse(localStorage.getItem('watchedFilms')) || [];\n            if (watchedFilms.includes(film)) {\n                Notify.failure(`${filmTitle} is already watched!`);\n                return false;\n            }\n            if (films.includes(film)) {\n                Notify.failure(`${filmTitle} is already in on the queue!`);\n                return false;\n            } else {\n            Notify.success(`${filmTitle} is added to queue list!`);\n            films.push(film);\n            localStorage.setItem(key, JSON.stringify(films));\n            }\n        };\n        addToLocalStorage(filmId, 'queueFilms');\n    };\n\naddWatched.addEventListener(\"click\", handleAddToWatched);\naddQueue.addEventListener(\"click\", handleAddToQueue);\n\n"],"names":["$14ce9e5e8b0840b8$var$addWatched","document","querySelector","$14ce9e5e8b0840b8$var$addQueue","addEventListener","filmTitle","dataset","title","film","key","films","JSON","parse","localStorage","getItem","queueFilms","includes","$1GAPJ","Notify","failure","success","push","setItem","stringify","addToLocalStorage","id"],"version":3,"file":"index.a3bbc21b.js.map"}